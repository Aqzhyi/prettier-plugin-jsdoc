// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`JS code should be formatted as usuall 1`] = `
"const variable1 = 1; // No semicolon
const stringVar = \\"text\\"; // Wrong quotes
const indented = 2; // Wrong indentation

// Longer then 80 characters
const someLongList = [
  \\"private\\",
  \\"memberof\\",
  \\"description\\",
  \\"example\\",
  \\"param\\",
  \\"returns\\",
  \\"link\\",
];
"
`;

exports[`Should add empty line after @description and @example description if necessary 1`] = `
"/**
 * Single line description
 */
"
`;

exports[`Should add empty line after @description and @example description if necessary 2`] = `
"/**
 * Single line description
 *
 */
"
`;

exports[`Should add empty line after @description and @example description if necessary 3`] = `
"/**
 * Single line description
 *
 * @returns {Boolean} Always true
 */
"
`;

exports[`Should align vertically param|property|returns|yields|throws if option set to true, and amount of spaces is different than default 1`] = `
"/**
 * @property  {Object}          unalginedProp   Unaligned property descriptin
 * @param     {String}          unalginedParam  Unaligned param description
 * @throws    {CustomExceptio}                  Unaligned throws description
 * @yields    {Number}                          Yields description
 * @returns   {undefined}
 */
"
`;

exports[`Should align vertically param|property|returns|yields|throws if option set to true, and amount of spaces is different than default 2`] = `
"/**
 * @property    {Object}            unalginedProp     Unaligned property
 * descriptin
 *
 * @param       {String}            unalginedParam    Unaligned param
 * description
 *
 * @throws      {CustomExceptio}                      Unaligned throws
 * description
 *
 * @yields      {Number}                              Yields description
 * @returns     {String}                              Unaligned returns
 * description
 */
"
`;

exports[`Should format regular jsDoc 1`] = `
"/**
 * Function example description that was wrapped by hand so it have more then
 * one line and don't end with a dot REPEATED TWO TIMES BECAUSE IT WAS EASIER
 * to copy function example description that was wrapped by hand so it have
 * more then one line.
 *
 * @async
 * @private
 * @memberof test
 * @example
 *   var one = 5;
 *   var two = 10;
 *
 *   if (one > 2) {
 *     two += one;
 *   }
 *
 * @param {String | Number} text Some text description that is very long and
 * needs to be wrapped
 *
 * @param {String} [defaultValue] TODO Default is \`defaultTest\`
 * @param {Number | Null} [optionalNumber]
 * @undefiendtag
 * @undefiendtag {number} name des
 * @returns {Boolean} Description for @returns with s
 */
const testFunction = (text, defaultValue, optionalNumber) => true;
"
`;

exports[`Should format regular jsDoc 2`] = `
"/**
 * Function example description that was wrapped by hand so it have more then
 * one line and don't end with a dot REPEATED TWO TIMES BECAUSE IT WAS EASIER
 * to copy function example description that was wrapped by hand so it have
 * more then one line.
 *
 * @async
 * @private
 * @memberof test
 * @example
 *   var one = 5;
 *   var two = 10;
 *
 *   if (one > 2) {
 *     two += one;
 *   }
 *
 * @param {String | Number} text Some text description that is very long and
 * needs to be wrapped
 *
 * @param {String} [defaultValue] TODO Default is \`defaultTest\`
 * @param {Number | Null} [optionalNumber]
 * @undefiendtag
 * @undefiendtag {number} name des
 * @returns {Boolean} Description for @returns with s
 */
const testFunction = (text, defaultValue, optionalNumber) => true;
"
`;

exports[`Should insert proper amount of spaces based on option 1`] = `
"/**
 * @param  {Object}  paramName  Param description that goes on and on and on
 * utill it will need to be wrapped
 *
 * @returns  {Number}  Return description
 */
"
`;

exports[`Should insert proper amount of spaces based on option 2`] = `
"/**
 * @param   {Object}   paramName   Param description that goes on and on and on
 * utill it will need to be wrapped
 *
 * @returns   {Number}   Return description
 */
"
`;

exports[`Should keep defined inner types 1`] = `
"/**
 * @param {String[]} test Test param
 */
"
`;

exports[`Should keep defined inner types 2`] = `
"/**
 * @param {String[]} test Test param
 */
"
`;

exports[`Should keep defined inner types 3`] = `
"/**
 * @param {(String | Object)[]} test Test param
 */
"
`;

exports[`Should keep defined inner types 4`] = `
"/**
 * @returns {Promise<Number | String | undefined>} Test promise
 */
"
`;

exports[`Should keep defined inner types 5`] = `
"/**
 * @returns {Object<Number | String | undefined>} Test object
 */
"
`;

exports[`Sould keep complex inner types 1`] = `
"/**
 * @param {(String | Number)[]} test Test param
 * @param {Object<String, Number>[]} test Test param
 * @param {...Number} test Test param
 * @param {?Number} test Test param
 * @param {?undefined} test Test param
 * @param {!Number} test Test param
 * @param {Number} test Test param
 * @param {Number | String} test Test param
 * @param {undefined} test Test param
 * @param {any} test Test param
 * @todo Todo is no param
 */
"
`;

exports[`Sould keep complex inner types 2`] = `
"/**
 * @returns {Promise<Object<string, number | undefined>>} Test return
 */
"
`;

exports[`Sould keep params ordering when more than 10 tags are present 1`] = `
"/**
 * Description
 *
 * @param {Number} test1 Test param
 * @param {Number} test2 Test param
 * @param {Number | String} test3 Test param
 * @param {?undefined} test4 Test param
 * @param {!undefined} test5 Test param
 * @param {any} test6 Test param
 * @param {?Number} test7 Test param
 * @param {...Number} test8 Test param
 * @param {!Number} test9 Test param
 * @param {String} test10 Test param
 * @param {Array} test11 Test param
 * @returns {Promise<Object<string, number | undefined>>} Test return
 */
"
`;

exports[`examples 1`] = `
"/**
 * @example
 *   {
 *     testArr: [1, 2];
 *   }
 */
"
`;

exports[`examples 2`] = `
"/**
 * @example
 *   [
 *     {
 *       foo: 1,
 *       foo: 2,
 *       foo: 9,
 *     },
 *     {
 *       bar: 1,
 *       bar: 5,
 *     },
 *   ];
 */
"
`;

exports[`yields should work like returns tag 1`] = `
"/**
 * @yields   {Number}   Yields description
 */
"
`;

exports[`yields should work like returns tag 2`] = `
"/**
 * @yields   {Number}   Yields description
 */
"
`;

exports[`yields should work like returns tag 3`] = `
"/**
 * @yields   {Number}
 */
"
`;

exports[`yields should work like returns tag 4`] = `
"/**
 * @yields   {any}   Yelds description
 */
"
`;

exports[`yields should work like returns tag 5`] = `
"/**
 * @yields   {any}
 */
"
`;
